# Reflective sphere

pi = 3.141592653589

println('Start world configuration')

# Create a Camera object and set its attributes with a tuple.
camera = Camera()
camera.from = (0, 0, -4)
camera.to = (0, 0, 0)
camera.up = [0, 1, 0]
camera.field_of_view = pi / 3
camera.horizontal = 1000
# You can use expressions to calculate stuff
camera.vertical = camera.horizontal

# Setup the world and add a light.
light = Light( Point(-10, 10, -10), Color(1, 1, 1) )

# Create a World object and add lights to the world.
world = World()
world.add(light)

# You can disable shadows or reflections
world.shadows = true
world.reflections = true

# Setup a base material
material = Material()
material.color = Color(0.8, 1, 0.6)
material.ambient = 0.1
material.diffuse = 0.9
material.specular = 0.9
material.shininess = 200
material.reflective = 0.3

# Create the sphere
sphere = Sphere(material)
world.add(sphere)

material.color = Color(1, 1, 1)

sphere = Sphere(material).scale(0.5, 0.5, 0.5)
world.add(sphere)

material.reflective = 0.3
plane = Plane(material).translate(0, -1, 0)
world.add(plane)

# Now its time to actually render the world
println('Render world')
measure = Measurement()
canvas = camera.render(world)
println('World rendered in {} milliseconds', measure.elapsed_time())

# And then save the canvas to a file
canvas.write('reflective_sphere.ppm')
println('World stored in {} milliseconds', measure.elapsed_time())

