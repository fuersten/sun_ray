# Creates the clock from chapter 4, but with spheres and all bells and whistles.

println('Start world configuration')

pi = 3.141592653589

# Create a Camera object and set its attributes with a tuple.
camera = Camera()
camera.from = (0, 0, -10)
camera.to = (0, 0, 0)
camera.up = [0, 1, 0]
camera.field_of_view = pi / 3
camera.horizontal = 1000
# You can use expressions to calculate stuff
camera.vertical = camera.horizontal

# Setup the world and add a light.
light = Light( Point(-10, 0, -10), Color(1, 1, 1) )

# Now set light to the world! Create a World object to add lights to the world.
world = World()
world.add(light)

material = Material()
back_drop = Plane(material).rotate_x(pi / 2).translate(0, 0, 0.15)
world.add(back_drop)

# Create the spheres
material.color = Color(1, 0, 0)
deg = 0
n = 1
while(n <= 12)
  sphere = Sphere(material).scale(0.3, 0.3, 0.3).translate(0, 3, 0).rotate_z(deg_to_rad(deg))
  world.add(sphere)
  n = n + 1
  deg = deg + 30
end

# Now its time to actually render the world
println('Render world')

# You can measure rendering time using the Measurement class
measure = Measurement()
canvas = camera.render(world)
println('World rendered in {} milliseconds', measure.elapsed_time())

# And then save the canvas to a file
canvas.write('clock.ppm')
println('World stored in {} milliseconds', measure.elapsed_time())

